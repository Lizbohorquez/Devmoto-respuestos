name: Search Secrets

on:
  workflow_dispatch:

jobs:
  search-secrets:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Search Secrets
        id: search
        run: |
          org=${{ github.repository_owner }}
          repos=$(curl -s "https://api.github.com/orgs/$org/repos?per_page=100" | jq -r '.[] | .name')

          declare -A secretEnvironments
          declare -A repoEnvironments

          for repo in $repos; do
            echo "Searching secrets in repository: $org/$repo"

            # Realiza la llamada curl y almacena la respuesta en la variable 'response'
            response=$(curl -s "https://api.github.com/repos/$org/$repo/actions/secrets" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}")

            # Imprime la respuesta en la consola
            echo "$response"

            secrets=$(echo "$response" | jq -r '.secrets[]')

            for secret in $secrets; do
              secretName=$(echo "$secret" | jq -r '.name')
              environments=$(echo "$secret" | jq -r '.environments[]')

              for environment in $environments; do
                if [[ -z "${secretEnvironments[$secretName]}" ]]; then
                  secretEnvironments[$secretName]="$environment"
                else
                  secretEnvironments[$secretName]+=",$environment"
                fi

                if [[ -z "${repoEnvironments[$repo]}" ]]; then
                  repoEnvironments[$repo]="$environment"
                else
                  repoEnvironments[$repo]+=",$environment"
                fi
              done
            done
          done

          echo "::set-output name=secretEnvironments::${secretEnvironments[@]}"
          echo "::set-output name=repoEnvironments::${repoEnvironments[@]}"

      - name: Show Secret Environments
        run: |
          secretEnvironments="${{ steps.search.outputs.secretEnvironments }}"
          for secret in "${!secretEnvironments[@]}"; do
            environments=${secretEnvironments[$secret]}
            echo "Secret '$secret' found in environments: $environments"
          done

      - name: Show Repo Environments
        run: |
          repoEnvironments="${{ steps.search.outputs.repoEnvironments }}"
          for repo in "${!repoEnvironments[@]}"; do
            environments=${repoEnvironments[$repo]}
            echo "Repository '$repo' has secrets in environments: $environments"
          done
